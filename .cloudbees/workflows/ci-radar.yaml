apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: "CI Radar â€” HTML to MinIO (ngrok)"

on:
  workflow_dispatch:
    inputs:
      language:
        description: "Report language"
        type: choice
        options: ["en", "fr"]
        default: "en"
      prompt:
        description: "Optional analysis prompt"
        type: string
        required: false

jobs:
  build:
    env:
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_S3_FORCE_PATH_STYLE: "true"

    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1

      - name: Install deps
        uses: docker://python:3.11
        shell: bash
        run: |
          set -euo pipefail
          python -V
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run CI Radar (HTML)
        id: run
        uses: docker://python:3.11
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          mkdir -p outputs
          args=(--format html --language "${{ inputs.language }}")
          [[ -n "${{ inputs.prompt }}" ]] && args+=(--prompt "${{ inputs.prompt }}")
          python main.py "${args[@]}"

          REPORT_FILE=$(ls -1 outputs/*.html | head -n1 || true)
          [[ -z "$REPORT_FILE" ]] && { echo "No HTML report found in outputs/"; exit 1; }

          echo "report-path=$REPORT_FILE" >> "$CLOUDBEES_OUTPUTS"

      - name: Upload to MinIO (AWS CLI) + presign URL
        id: minio
        uses: docker://amazon/aws-cli:2
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          ENDPOINT: ${{ vars.MINIO_ENDPOINT }}
        run: |
          set -euo pipefail
          KEY="ci-radar/reports/${{ cloudbees.run_id }}-${{ inputs.language }}.html"

          aws s3 cp "${{ steps.run.outputs.report-path }}" "s3://${{ vars.S3_BUCKET }}/${KEY}" \
            --endpoint-url "$ENDPOINT" \
            --content-type text/html

          URL=$(aws s3 presign "s3://${{ vars.S3_BUCKET }}/${KEY}" \
            --expires-in 604800 --endpoint-url "$ENDPOINT")

          echo "presigned-url=$URL" >> "$CLOUDBEES_OUTPUTS"

      - name: Show link
        uses: docker://alpine:latest
        shell: bash
        run: |
          echo "Report URL (presigned): ${{ steps.minio.outputs.presigned-url }}"